import { GraphQLError, FieldNode, ValidationContext, GraphQLSchema, DocumentNode, OperationDefinitionNode, FragmentDefinitionNode } from "graphql";
export declare function getValidationErrors(schema: GraphQLSchema, document: DocumentNode, fragments?: {
    [fragmentName: string]: FragmentDefinitionNode;
}): ReadonlyArray<GraphQLError>;
export declare function validateQueryDocument(schema: GraphQLSchema, document: DocumentNode): void;
export declare function NoAnonymousQueries(context: ValidationContext): {
    OperationDefinition(node: OperationDefinitionNode): boolean;
};
export declare function NoTypenameAlias(context: ValidationContext): {
    Field(node: FieldNode): void;
};
//# sourceMappingURL=validation.d.ts.map
{
  "_args": [
    [
      "jest-serializer@25.0.0",
      "/Users/rambo/Documents/MyProject/objcio/fullstack-tutoria/final/server"
    ]
  ],
  "_development": true,
  "_from": "jest-serializer@25.0.0",
  "_id": "jest-serializer@25.0.0",
  "_inBundle": false,
  "_integrity": "sha512-ZwIR9GOdYK7E7nhqH+QJHznUN5NkRy1yRKWyAPfXeaQ20gTIaQi001sZX7GGkAyBpNf2f3mFcBD36vNefVU0yQ==",
  "_location": "/jest-serializer",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "jest-serializer@25.0.0",
    "name": "jest-serializer",
    "escapedName": "jest-serializer",
    "rawSpec": "25.0.0",
    "saveSpec": null,
    "fetchSpec": "25.0.0"
  },
  "_requiredBy": [
    "/jest-haste-map"
  ],
  "_resolved": "https://registry.npmjs.org/jest-serializer/-/jest-serializer-25.0.0.tgz",
  "_spec": "25.0.0",
  "_where": "/Users/rambo/Documents/MyProject/objcio/fullstack-tutoria/final/server",
  "bugs": {
    "url": "https://github.com/facebook/jest/issues"
  },
  "description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `undefined`, `NaN`, etc, although the JSON one does it through a replacer/reviver.",
  "engines": {
    "node": ">= 8"
  },
  "gitHead": "ff9269be05fd8316e95232198fce3463bf2f270e",
  "homepage": "https://github.com/facebook/jest#readme",
  "license": "MIT",
  "main": "build/index.js",
  "name": "jest-serializer",
  "publishConfig": {
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/facebook/jest.git",
    "directory": "packages/jest-serializer"
  },
  "types": "build/index.d.ts",
  "version": "25.0.0"
}

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _child_process = require('child_process');

var _child_process2 = _interopRequireDefault(_child_process);

var _git_log_format_markers = require('./constants/git_log_format_markers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var gitLogFormatString = _git_log_format_markers.gitLogCommitMarker + '%n%H%n%an%n%ae%n%aD%n' + _git_log_format_markers.gitLogMessageMarker + '%n%B%n' + _git_log_format_markers.gitLogFileMarker;

/*
  Returns a stream of git log data from a git repository
*/
var gitLogStream = function gitLogStream(pathToRepo) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var sinceCommit = options.sinceCommit ? options.sinceCommit + '..HEAD' : '';
  var gitParams = ['log', '--pretty=format:' + gitLogFormatString, '--name-status', sinceCommit, '--', './*', ':!node_modules'].filter(function (elt) {
    return elt !== '';
  });

  var gitProcess = _child_process2.default.spawn('git', gitParams, { cwd: pathToRepo });
  var errorHandlers = [];
  gitProcess.on('error', function (e) {
    return errorHandlers.forEach(function (handler) {
      return handler(e);
    });
  });
  return {
    stream: gitProcess.stdout,
    addErrorHandler: function addErrorHandler(fn) {
      return errorHandlers.push(fn);
    }
  };
};

exports.default = gitLogStream;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9naXRfbG9nX3N0cmVhbS5qcyJdLCJuYW1lcyI6WyJnaXRMb2dGb3JtYXRTdHJpbmciLCJnaXRMb2dTdHJlYW0iLCJwYXRoVG9SZXBvIiwib3B0aW9ucyIsInNpbmNlQ29tbWl0IiwiZ2l0UGFyYW1zIiwiZmlsdGVyIiwiZWx0IiwiZ2l0UHJvY2VzcyIsInNwYXduIiwiY3dkIiwiZXJyb3JIYW5kbGVycyIsIm9uIiwiZm9yRWFjaCIsImhhbmRsZXIiLCJlIiwic3RyZWFtIiwic3Rkb3V0IiwiYWRkRXJyb3JIYW5kbGVyIiwicHVzaCIsImZuIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7QUFDQTs7OztBQU1BLElBQU1BLDZMQUFOOztBQUVBOzs7QUFHQSxJQUFNQyxlQUFlLFNBQWZBLFlBQWUsQ0FBQ0MsVUFBRCxFQUE4QjtBQUFBLE1BQWpCQyxPQUFpQix1RUFBUCxFQUFPOztBQUNqRCxNQUFNQyxjQUFjRCxRQUFRQyxXQUFSLEdBQXlCRCxRQUFRQyxXQUFqQyxjQUF1RCxFQUEzRTtBQUNBLE1BQU1DLFlBQVksQ0FDaEIsS0FEZ0IsdUJBRUdMLGtCQUZILEVBR2hCLGVBSGdCLEVBSWhCSSxXQUpnQixFQUtoQixJQUxnQixFQU1oQixLQU5nQixFQU9oQixnQkFQZ0IsRUFRaEJFLE1BUmdCLENBUVQ7QUFBQSxXQUFPQyxRQUFRLEVBQWY7QUFBQSxHQVJTLENBQWxCOztBQVVBLE1BQU1DLGFBQWEsd0JBQWFDLEtBQWIsQ0FBbUIsS0FBbkIsRUFBMEJKLFNBQTFCLEVBQXFDLEVBQUNLLEtBQUtSLFVBQU4sRUFBckMsQ0FBbkI7QUFDQSxNQUFNUyxnQkFBZ0IsRUFBdEI7QUFDQUgsYUFBV0ksRUFBWCxDQUFjLE9BQWQsRUFBdUI7QUFBQSxXQUFLRCxjQUFjRSxPQUFkLENBQXNCO0FBQUEsYUFBV0MsUUFBUUMsQ0FBUixDQUFYO0FBQUEsS0FBdEIsQ0FBTDtBQUFBLEdBQXZCO0FBQ0EsU0FBTztBQUNMQyxZQUFRUixXQUFXUyxNQURkO0FBRUxDLHFCQUFpQjtBQUFBLGFBQU1QLGNBQWNRLElBQWQsQ0FBbUJDLEVBQW5CLENBQU47QUFBQTtBQUZaLEdBQVA7QUFJRCxDQW5CRDs7a0JBcUJlbkIsWSIsImZpbGUiOiJnaXRfbG9nX3N0cmVhbS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjaGlsZFByb2Nlc3MgZnJvbSAnY2hpbGRfcHJvY2Vzcyc7XG5pbXBvcnQge1xuICBnaXRMb2dDb21taXRNYXJrZXIsXG4gIGdpdExvZ01lc3NhZ2VNYXJrZXIsXG4gIGdpdExvZ0ZpbGVNYXJrZXJcbn0gZnJvbSAnLi9jb25zdGFudHMvZ2l0X2xvZ19mb3JtYXRfbWFya2Vycyc7XG5cbmNvbnN0IGdpdExvZ0Zvcm1hdFN0cmluZyA9IGAke2dpdExvZ0NvbW1pdE1hcmtlcn0lbiVIJW4lYW4lbiVhZSVuJWFEJW4ke2dpdExvZ01lc3NhZ2VNYXJrZXJ9JW4lQiVuJHtnaXRMb2dGaWxlTWFya2VyfWA7XG5cbi8qXG4gIFJldHVybnMgYSBzdHJlYW0gb2YgZ2l0IGxvZyBkYXRhIGZyb20gYSBnaXQgcmVwb3NpdG9yeVxuKi9cbmNvbnN0IGdpdExvZ1N0cmVhbSA9IChwYXRoVG9SZXBvLCBvcHRpb25zID0ge30pID0+IHtcbiAgY29uc3Qgc2luY2VDb21taXQgPSBvcHRpb25zLnNpbmNlQ29tbWl0ID8gYCR7b3B0aW9ucy5zaW5jZUNvbW1pdH0uLkhFQURgIDogJyc7XG4gIGNvbnN0IGdpdFBhcmFtcyA9IFtcbiAgICAnbG9nJyxcbiAgICBgLS1wcmV0dHk9Zm9ybWF0OiR7Z2l0TG9nRm9ybWF0U3RyaW5nfWAsXG4gICAgJy0tbmFtZS1zdGF0dXMnLFxuICAgIHNpbmNlQ29tbWl0LFxuICAgICctLScsXG4gICAgJy4vKicsXG4gICAgJzohbm9kZV9tb2R1bGVzJ1xuICBdLmZpbHRlcihlbHQgPT4gZWx0ICE9PSAnJyk7XG5cbiAgY29uc3QgZ2l0UHJvY2VzcyA9IGNoaWxkUHJvY2Vzcy5zcGF3bignZ2l0JywgZ2l0UGFyYW1zLCB7Y3dkOiBwYXRoVG9SZXBvfSk7XG4gIGNvbnN0IGVycm9ySGFuZGxlcnMgPSBbXTtcbiAgZ2l0UHJvY2Vzcy5vbignZXJyb3InLCBlID0+IGVycm9ySGFuZGxlcnMuZm9yRWFjaChoYW5kbGVyID0+IGhhbmRsZXIoZSkpKTtcbiAgcmV0dXJuIHtcbiAgICBzdHJlYW06IGdpdFByb2Nlc3Muc3Rkb3V0LFxuICAgIGFkZEVycm9ySGFuZGxlcjogZm4gPT4gZXJyb3JIYW5kbGVycy5wdXNoKGZuKVxuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZ2l0TG9nU3RyZWFtO1xuIl19